/*
* Copyright (c) 2020 Oracle and/or its affiliates.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

def aetherScript = '''
{{aetherScript}}
'''

def engineScript = '''
{{engineScript}}
'''

def helidonEngine = new GroovyShell().parse(engineScript).create()
helidonEngine.checkMavenVersion()
helidonEngine.checkJavaVersion()

def engineGav = "{{engineGroupId}}:{{engineArtifactId}}:{{engineVersion}}"

def archetypeProperties = request.getProperties()
def props = [
"maven": "true",
{{#propNames}}
    "{{.}}": archetypeProperties.getProperty("{{.}}"),
{{/propNames}}
]

def localRepo = request
    .getProjectBuildingRequest()
    .getRepositorySession()
    .getLocalRepository()
    .getBasedir()

def remoteRepos = request
    .getProjectBuildingRequest()
    .getRemoteRepositories()

def projectDir = new File(request.getOutputDirectory() + "/" + request.getArtifactId())

helidonEngine.generate(
    aetherScript,
    localRepo,
    remoteRepos,
    request.getArchetypeGroupId(),
    request.getArchetypeArtifactId(),
    request.getArchetypeVersion(),
    engineGav,
    props,
    projectDir)

